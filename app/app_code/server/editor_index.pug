- import 'common.pug' as common
doctype html
html
	head
		+common.resources
		// Meta Data
		meta(name='viewport' content='width=device-width,height=device-height,initial-scale=1.0')
		meta(name='description' content='Online Python Editor With Live Syntax Checking')
		meta(name='keywords' content='Lint,Online,Editor,Python,Syntax-Checking')
		title Python editor
		// Favicon
		//- link(rel='shortcut icon' href="{{ url_for('static', filename='favicon.ico') }}")
		link(href='https://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css')
		
	body
		// Scripts
		script(src='/static/js/jquery.js' type='text/javascript')
		script(src='/static/codemirror/lib/codemirror.js')
		script(src='/static/codemirror/lib/python.js')
		script(src='/static/codemirror/lib/lint.js')
		script(src='/static/js/cm-validator-remote.js' type='text/javascript')
		// Codemirror Addons
		script(src='/static/codemirror/addon/search.js')
		script(src='/static/codemirror/addon/searchcursor.js')
		script(src='/static/codemirror/addon/dialog.js')
		// Socket IO
		script(src='/static/js/socket.io/2.1.1/socket.io.js')
		// Require.js
		script(src='/static/js/require.js/2.3.5/require.min.js')
		// Style
		link(rel='stylesheet' href='/static/css/bootstrap.min.css' type='text/css')
		link(rel='stylesheet' href='/static/codemirror/lib/codemirror.css')
		link(rel='stylesheet' href='/static/codemirror/lib/lint.css')
		link(rel='stylesheet' href='/static/codemirror/addon/dialog.css')
		link(rel='stylesheet' href='/static/css/style.css' type='text/css')
		#info.text-center
		#app(route="index")
			nav#main-nav
				ol.breadcrumb
					li.breadcrumb-item.active Index
					+common.menu_fontconfig
			.index.container
				.text-center.mb-3
					h1 Python Editor
					p
						| Examples: 
						a#codeexample1(href='#') 1&nbsp;
						a#codeexample2(href='#') 2&nbsp;
						a#codeexample3(href='#') 3&nbsp;
						a#codeexample4(href='#') 4&nbsp;
						a#codeexample5(href='#') 5&nbsp;
						a#codeexample6(href='#') 6&nbsp;
						a#codeexample7(href='#') 7
					br
					.text-left.mb-3
						.container
						textarea#txt
							| def foo(bar, baz):
							| 	pass
							| foo(42)
					br
					button#run.btn.btn-success(type='button') Run
					br
					br
					.text-left.mb-3
						#output
							h2 Output
							pre.
						
					br
					#append_text
						h2 Code analysis
						table#errorslist.table(style='display: inline-block;')
						tr
							th Line
							th Severity
							th Error
							th Tips
							th Error Code
							th Error Info
					br
					script(src='/static/js/javascript.js' type='text/javascript')
